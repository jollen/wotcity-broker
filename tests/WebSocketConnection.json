{ _debug: 
   { [Function: disabled]
     enabled: false,
     namespace: 'websocket:connection',
     printOutput: [Function] },
  domain: null,
  _events: { close: { [Function: g] listener: [Function] } },
  _maxListeners: 10,
  config: 
   { httpServer: [ [Object] ],
     maxReceivedFrameSize: 65536,
     maxReceivedMessageSize: 1048576,
     fragmentOutgoingMessages: true,
     fragmentationThreshold: 16384,
     keepalive: true,
     keepaliveInterval: 20000,
     dropConnectionOnKeepaliveTimeout: true,
     keepaliveGracePeriod: 10000,
     useNativeKeepalive: false,
     assembleFragments: true,
     autoAcceptConnections: true,
     ignoreXForwardedFor: false,
     disableNagleAlgorithm: true,
     closeTimeout: 5000 },
  socket: 
   { _connecting: false,
     _handle: 
      { fd: 13,
        writeQueueSize: 0,
        owner: [Circular],
        onread: [Function: onread],
        reading: true },
     _readableState: 
      { highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: false,
        endEmitted: false,
        reading: true,
        calledRead: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        objectMode: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        oldMode: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        close: [Function] },
     _maxListeners: 10,
     _writableState: 
      { highWaterMark: 16384,
        objectMode: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        buffer: [],
        errorEmitted: false },
     writable: true,
     allowHalfOpen: true,
     onend: null,
     destroyed: false,
     bytesRead: 506,
     _bytesDispatched: 160,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _connections: 1,
        connections: [Getter/Setter],
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        allowHalfOpen: true,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _connectionKey: '4:0.0.0.0:8080' },
     _idleTimeout: -1,
     _idleNext: null,
     _idlePrev: null,
     _idleStart: 1423037829116,
     parser: null,
     ondata: null,
     _paused: false,
     _peername: { address: '127.0.0.1', family: 'IPv4', port: 57372 } },
  protocol: undefined,
  extensions: [],
  remoteAddress: '127.0.0.1',
  closeReasonCode: -1,
  closeDescription: null,
  closeEventEmitted: false,
  maskOutgoingPackets: false,
  maskBytes: <Buffer 60 56 63 00>,
  frameHeader: <Buffer 1b 00 00 00 1c 00 00 00 18 77>,
  bufferList: 
   { domain: null,
     _events: {},
     _maxListeners: 10,
     encoding: undefined,
     construct: 
      { [Function: Buffer]
        isEncoding: [Function],
        poolSize: 8192,
        isBuffer: [Function: isBuffer],
        byteLength: [Function],
        concat: [Function],
        _charsWritten: 2 },
     length: [Getter],
     write: [Function],
     end: [Function],
     push: [Function],
     forEach: [Function],
     join: [Function],
     joinInto: [Function],
     advance: [Function],
     take: [Function],
     toString: [Function] },
  currentFrame: 
   { maskBytes: <Buffer 60 56 63 00>,
     frameHeader: <Buffer 1b 00 00 00 1c 00 00 00 18 77>,
     config: 
      { httpServer: [Object],
        maxReceivedFrameSize: 65536,
        maxReceivedMessageSize: 1048576,
        fragmentOutgoingMessages: true,
        fragmentationThreshold: 16384,
        keepalive: true,
        keepaliveInterval: 20000,
        dropConnectionOnKeepaliveTimeout: true,
        keepaliveGracePeriod: 10000,
        useNativeKeepalive: false,
        assembleFragments: true,
        autoAcceptConnections: true,
        ignoreXForwardedFor: false,
        disableNagleAlgorithm: true,
        closeTimeout: 5000 },
     maxReceivedFrameSize: 65536,
     protocolError: false,
     frameTooLarge: false,
     invalidCloseFrameLength: false,
     parseState: 1,
     closeStatus: -1 },
  fragmentationSize: 0,
  frameQueue: [],
  connected: true,
  state: 'open',
  waitingForCloseResponse: false,
  receivedEnd: false,
  closeTimeout: 5000,
  assembleFragments: true,
  maxReceivedMessageSize: 1048576,
  outputBufferFull: false,
  inputPaused: false,
  receivedDataHandler: [Function],
  _closeTimerHandler: [Function],
  _keepaliveTimerHandler: [Function],
  _keepaliveTimeoutID: 
   { _idleTimeout: 20000,
     _idlePrev: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        msecs: 20000,
        ontimeout: [Function: listOnTimeout] },
     _idleNext: 
      { _idleNext: [Circular],
        _idlePrev: [Circular],
        msecs: 20000,
        ontimeout: [Function: listOnTimeout] },
     _idleStart: 1423037829139,
     _onTimeout: [Function],
     _repeat: false },
  _gracePeriodTimerHandler: [Function],
  webSocketVersion: 13,
  remoteAddresses: [ '127.0.0.1' ] }